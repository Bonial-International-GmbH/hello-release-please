---
name: release
on:
  workflow_dispatch:
  push:
    branches:
      - main
    tags:
      - 'v*'

jobs:
  release-please:
    runs-on: ubuntu-20.04
    outputs:
      tag_name: ${{ steps.release-please.outputs.tag_name }}
    steps:
      - name: Run release-please
        id: release-please
        uses: google-github-actions/release-please-action@v3
        with:
          release-type: go
          bump-minor-pre-major: true
          package-name: hello-release-please
          changelog-types: '[{"type":"feat","section":"Features","hidden":false},{"type":"fix","section":"Bug Fixes","hidden":false},{"type":"chore","section":"Miscellaneous","hidden":false}]'

  publish-image:
    needs: release-please
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    env:
      IMAGE_NAME: hello-release-please
      TAG_NAME: ${{ needs.release-please.outputs.tag_name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Build image
        run: docker build -f Dockerfile -t $IMAGE_NAME .

      - name: Login to ghcr.io
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Push the image for the tag created by release-please, if any.
          if [ -n "$TAG_NAME" ]; then
            echo IMAGE_ID=$IMAGE_ID
            echo VERSION=$TAG_NAME

            docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
            docker push $IMAGE_ID:$VERSION
          fi

          # Push the image for the git ref.
          #
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Use Docker `latest` tag convention for `main` branch
          if [ "$VERSION" == "main" ]; then
            VERSION=latest
          fi

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

  publish-binaries:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Unshallow
        run: git fetch --prune --unshallow

      - name: Setup
        uses: actions/setup-go@v3
        with:
          go-version: 1.19

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v3
        with:
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
